#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
int dataIsReady = 0;

// utilize default attributes to initialize mutex and conditional variable
pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
pthread_cond_t condvar = PTHREAD_COND_INITIALIZER;

// Consumer thread
void *consumer(void *notUsed){
	puts("Consumer thread started...\n");
	while(1){
		pthread_mutex_lock(&mutex);
		// test conditions until it is true
		while(!dataIsReady){
			pthread_cond_wait(&condvar, &mutex);
		}

		// process data;
		puts("Consumer: received data from Producer\n");

		// change the condition that data is not ready because it has been consumed
		dataIsReady = 0;
		pthread_cond_signal(&condvar);
		pthread_mutex_unlock(&mutex);
	}
	return 0;
}

// Producer thread
void *producer(void *notUser){
	return 0;
}


int main(void) {
	puts("Hello World!!!"); /* prints Hello World!!! */
	return EXIT_SUCCESS;
}
