#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

pthread_barrier_t barrier;
pthread_mutex_t mutex;

void * getKey(void *notUsed){
	return 0;
}
void *printKey(void *data){
	char *c = (char*) data;
	return 0;
}

int main(int argc, char *argv[]) {
	printf("Barrier Key Press Program Running...\n");
	printf("Press keys: A or B or C\n");

	pthread_t threadKey, threadA, threadB, threadC;
	pthread_create(&threadKey, NULL, getKey, NULL);

	char keys[] = {'A', 'B', 'C'};
	int i =0; n = sizeof(keys)/sizeof(keys[0]);

	return EXIT_SUCCESS;
}
