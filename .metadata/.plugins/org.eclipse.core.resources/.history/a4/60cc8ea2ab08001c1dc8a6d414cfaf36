#include <stdio.h>
#include <stdlib.h>
#include <mqueue.h>
#define MESSAGESIZE 2

int main(int argc, char *argv[]) {
	mqd_t qd;
	char buf[MESSAGESIZE] = {};
	struct mq_attr attribute;
	const char * mqueueLocation = "/net/receive/traffic_light_queue";
	qd = mq_open(mqueueLocation, O_RDONLY);
	if(qd != -1){
		mq_getattr(qd, &attribute);
		printf("max. %u msgs, %u bytes; waiting: %u\n", attribute.mq_maxmsg,
				attribute.mq_msgsize, attribute.mq_curmsgs);
		while(mq_receive(qd, buf, MESSAGESIZE, NULL) > 0){
			switch ((int)(buf[0]-'0')){
				case 1:
					printf("EWR-NSR(%c) -> Wait for 1 second\n", buf);
					break;
				case 2:
					printf("Received '%c' -> stopping car from North-South Road\n", buf[1]);
					printf("EWG-NSR(%c) -> Wait for 2 seconds\n", buf[0]);
					break;
				case 3:
					printf("EWY-NSR(%c) -> Wait for 1 second\n", buf);
					break;
				case 4:
					printf("EWR-NSR(%c) -> Wait for 1 second\n", buf);
					break;
				case 5:
					printf("Received '%c' -> stopping car from East-West Road\n", buf[1]);
					printf("EWR-NSG(%c) -> Wait for 2 seconds\n", buf[0]);
					break;
				case 6:
					printf("EWR-NSY(%c) -> Wait for 1 second\n", buf);
					break;
			}
			if(!strcmp(buf, "done")){
				break;
			}
		}
		mq_close(qd);
	}
	printf("Receive process terminated...\n");
	return EXIT_SUCCESS;
}
